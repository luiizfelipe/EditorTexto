<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtSobre.Text" xml:space="preserve">
    <value>Programa criado por Luiz Guimarães, segue o git hub par visualização do código fonte:

https://github.com/luiizfelipe/

Qualquer necessidade de auxilio pode realizar contato via linkedin:

https://www.linkedin.com/in/luizfeliipe/

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>